skip_tags: true

version: '1.0.{build}'

image:
  - Visual Studio 2019
  - Ubuntu1804

build:
  verbosity: detailed

environment:
  matrix:
    - compiler: native
    - compiler: clang

matrix:
  fast_finish: true

for:
  -
    matrix:
      only:
        - image: Visual Studio 2019
          compiler: native
    environment:
      c_compiler: cl
      cxx_compiler: cl
  -
    matrix:
      only:
        - image: Visual Studio 2019
          compiler: clang
    environment:
      c_compiler: clang-cl
      cxx_compiler: clang-cl
  -
    matrix:
      only:
        - image: Ubuntu1804
          compiler: native
    environment:
      c_compiler: gcc
      cxx_compiler: g++
  -
    matrix:
      only:
        - image: Ubuntu1804
          compiler: clang
    environment:
      c_compiler: clang
      cxx_compiler: clang++

platform:
  - x86
  - x64

configuration:
  - Debug
  - Release

cache:
  - c:\projects\deps -> .appveyor.yml

install:
  - cmd: echo %cd%
  - sh: pwd
  - cmd: set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip"
  - cmd: set DEPS_DIR=C:\projects\deps

  - cmd: if not exist %DEPS_DIR% (
      mkdir %DEPS_DIR% &&
      cd %DEPS_DIR% &&
      appveyor DownloadFile %NINJA_URL% -FileName ninja.zip &&
      7z x ninja.zip -o%DEPS_DIR%\ninja > nul )

  - cmd: set BOOST_ROOT=C:\Libraries\boost_1_71_0
  - cmd: set NINJA_BIN=%DEPS_DIR%\ninja
  - cmd: set PATH=%NINJA_BIN%;%PATH%

  - ninja --version
  - cmd: %cxx_compiler% /?
  - sh: %cxx_compiler% --version

before_build:
  - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule init
  - git submodule update

build_script:
  - nproc
  - mkdir build
  - cd build
  - cmake .. -GNinja -DCMAKE_BUILD_TYPE=%CONFIGURATION%
                     -DCMAKE_CXX_COMPILER=%CXX_COMPILER%
                     -DCMAKE_C_COMPILER=%C_COMPILER%
                     -DENABLE_TESTING=TRUE

  - cmake --build . --config %CONFIGURATION% -j 2

test_script:
  - ctest --output-on-failure -j 2

artifacts:
  - path: 'build/bin/bearsplate.exe'
    name: binary

deploy:
  release: bearsplate-v$(appveyor_build_version)-%platform%-win
  description: 'Release bearsplate-v$(appveyor_build_version) for windows'
  provider: GitHub
  auth_token:
    secure: 6sWJttUxwB1HzKovRfV2uEx7bTNdSP/g9X4cupAFmM0J3SQvd+nddSMLXJW7R/vC
  artifact: binary
  draft: false
  prerelease: false
  on:
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    branch: master
    configuration: Release
    APPVEYOR_REPO_TAG: false
